#!/usr/bin/env bash
# Git pre-commit hook to prevent accidentally committing secrets

set -euo pipefail

# Colors for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Patterns to search for (case insensitive)
SECRET_PATTERNS=(
    "password\s*[:=]\s*['\"][^'\"]*['\"]"
    "api_key\s*[:=]\s*['\"][^'\"]*['\"]"
    "secret\s*[:=]\s*['\"][^'\"]*['\"]"
    "token\s*[:=]\s*['\"][^'\"]*['\"]"
    "private_key"
    "-----BEGIN (RSA |DSA )?PRIVATE KEY-----"
    "-----BEGIN OPENSSH PRIVATE KEY-----"
    "-----BEGIN PGP PRIVATE KEY-----"
    "AKIA[0-9A-Z]{16}"  # AWS Access Key
    "sk-[a-zA-Z0-9]{48}" # OpenAI API Key pattern
    "ghp_[a-zA-Z0-9]{36}" # GitHub Personal Access Token
    "gho_[a-zA-Z0-9]{36}" # GitHub OAuth Token
)

# Files to ignore (these can contain secrets legitimately)
IGNORE_PATTERNS=(
    "\.gpg$"
    "\.enc$"
    "\.asc$"
    "/\.password-store/"
    "/pass-store/"
    "\.example$"
    "\.template$"
    "\.md$"  # Documentation files
)

# Function to check if file should be ignored
should_ignore() {
    local file="$1"
    for pattern in "${IGNORE_PATTERNS[@]}"; do
        if [[ $file =~ $pattern ]]; then
            return 0
        fi
    done
    return 1
}

# Get list of files to be committed
files_to_check=$(git diff --cached --name-only --diff-filter=ACM)

if [[ -z "$files_to_check" ]]; then
    exit 0
fi

found_secrets=false

# Check each file
while IFS= read -r file; do
    # Skip if file should be ignored
    if should_ignore "$file"; then
        continue
    fi
    
    # Skip if file doesn't exist (deleted files)
    if [[ ! -f "$file" ]]; then
        continue
    fi
    
    # Check file content against secret patterns
    for pattern in "${SECRET_PATTERNS[@]}"; do
        if grep -qiE "$pattern" "$file"; then
            echo -e "${RED}‚ö†Ô∏è  Potential secret found in: $file${NC}"
            echo -e "${YELLOW}   Pattern: $pattern${NC}"
            found_secrets=true
        fi
    done
    
done <<< "$files_to_check"

if [[ "$found_secrets" == true ]]; then
    echo ""
    echo -e "${RED}‚ùå Commit blocked: Potential secrets detected!${NC}"
    echo ""
    echo "If these are not actual secrets:"
    echo "1. Add them to .gitignore"
    echo "2. Use environment variables instead"
    echo "3. Store in pass password manager"
    echo "4. Use git commit --no-verify to bypass (NOT recommended)"
    echo ""
    exit 1
fi

echo "‚úÖ No secrets detected in commit"

# Auto-sync documentation if Makefile changed
if git diff --cached --name-only | grep -q "^Makefile$"; then
    echo "üìÑ Makefile changed, updating documentation..."
    if [[ -f "Makefile" ]] && grep -q "docs:" Makefile; then
        make docs
        git add README.md
        echo "‚úÖ Documentation updated and staged"
    fi
fi

exit 0