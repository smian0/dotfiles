{
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Bash(npm run lint)",
      "Bash(npm run test:*)",
      "Read(~/.zshrc)"
    ],
    "deny": [
      "Read(./.env)",
      "Read(./.env.*)",
      "Read(./secrets/**)"
    ]
  },
  "enableAllProjectMcpServers": true,
  "hooks": {
    "SessionStart": [
      {
        "matcher": "startup",
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/global-date-context.sh"
          }
        ]
      },
      {
        "matcher": "resume", 
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/global-date-context.sh"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "echo \"\nThink hard.\n\""
          },
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/you_are_not_right.sh"
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); current_dir=\"$(echo \"$input\" | jq -r '.workspace.current_dir')\"; model_name=\"$(echo \"$input\" | jq -r '.model.display_name')\"; claude_version=\"$(claude --version 2>/dev/null | cut -d' ' -f1 || echo 'N/A')\"; output_style=\"$(echo \"$input\" | jq -r '.output_style.name // \"default\"' | sed 's/default/std/')\"; short_dir=\"$(echo \"$current_dir\" | sed \"s|^$HOME|~|\")\"; if git -C \"$current_dir\" rev-parse --git-dir > /dev/null 2>&1; then branch=\"$(git -C \"$current_dir\" branch --show-current 2>/dev/null || git -C \"$current_dir\" rev-parse --short HEAD 2>/dev/null)\"; if git -C \"$current_dir\" diff --quiet && git -C \"$current_dir\" diff --cached --quiet; then git_status=\"($branch)\"; else git_status=\"($branch âœ—)\"; fi; printf \"\\033[2m\\033[1;32m$(whoami)@$(hostname -s)\\033[0m\\033[2m:\\033[1;34m%s\\033[0m \\033[1;33m%s\\033[0m \\033[2m[%s]\\033[0m \\033[2m[claude %s]\\033[0m \\033[2m[%s]\\033[0m\" \"$short_dir\" \"$git_status\" \"$model_name\" \"$claude_version\" \"$output_style\"; else printf \"\\033[2m\\033[1;32m$(whoami)@$(hostname -s)\\033[0m\\033[2m:\\033[1;34m%s\\033[0m \\033[2m[%s]\\033[0m \\033[2m[claude %s]\\033[0m \\033[2m[%s]\\033[0m\" \"$short_dir\" \"$model_name\" \"$claude_version\" \"$output_style\"; fi"
  },
  "model": "opusplan"
}